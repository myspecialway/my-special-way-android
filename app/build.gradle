apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'

apply plugin: 'jacoco'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'com.apollographql.android'

ext {
    okhttp_version = '3.8.1'
    retrofit_version = '2.2.0'
    rxjava_version = '2.1.7'
    koin_version = '1.0.0-RC-1'

    coverageSourceDirs = 'src/test/java'
}

jacoco {
    toolVersion = "0.8.2"
    reportsDir = file("$buildDir/reports")
}

task jacocoTestReport(type: JacocoReport, dependsOn: "testDebugUnitTest") {
    group = "Reporting"
    description = "Generate Jacoco coverage reports for Debug build"

    reports {
        xml.enabled = true
        html.enabled = true
    }

    // what to exclude from coverage report
    // UI, "noise", generated classes, platform classes, etc.
    def excludes = [
            '**/R.class',
            '**/R$*.class',
            '**/*$ViewInjector*.*',
            '**/BuildConfig.*',
            '**/Manifest*.*',
            '**/*Test*.*',
            'android/**/*.*',
            '**/*Fragment.*',
            '**/*Fragment$*.*',
            '**/*Activity.*',
            '**/*Activity$*.*',
            '**/*Adapter*.*',
            '**/*Adapter$*.*',
            '**/*FCM*.*',
            '**/*FCM$*.*',
            '**/*Model.*',
            '**/*Dialog*.*',
            '**/*Dialog$*.*',
            '**/*Alarm*.*',
            '**/*Alarm$*.*',
            '**/*KeyboardManager.*',
            '**/*KeyboardManager$*.*',
            '**/*AppModule*.*',
            '**/*AppModule$*.*',
            '**/*Navigation.*',
            '**/*App.*',
            '**/*App$*.*',
            '**/*Database.*',
            '**/*AgendaModel.*',
            '**/*AgendaModel$*.*'

    ]
    // generated classes
    classDirectories = fileTree(
            dir: "$buildDir/intermediates/classes/debug",
            excludes: excludes
    ) + fileTree(
            dir: "$buildDir/tmp/kotlin-classes/debug",
            excludes: excludes
    )

    // sources
    sourceDirectories = files([
            android.sourceSets.main.java.srcDirs,
            "src/main/kotlin"
    ])
    executionData = files("$buildDir/jacoco/testDebugUnitTest.exec")
}

androidExtensions {
    experimental = true
}

android {
    compileSdkVersion 28
    buildToolsVersion '28.0.3'

    compileOptions {
        sourceCompatibility 1.8
        targetCompatibility 1.8
    }

    defaultConfig {
        applicationId "org.myspecialway"
        minSdkVersion 20
        targetSdkVersion 28
        versionCode System.getenv("TRAVIS_BUILD_NUMBER") as Integer ?: 1
        versionName "1.0"
        versionNameSuffix "-" + System.getenv("TRAVIS_BUILD_NUMBER") as String ?: "1"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        debug {
            storeFile file("debug.keystore")
            storePassword "android"
            keyAlias "sdk_debug"
            keyPassword "android"
        }
    }

    buildTypes {
        debug {
            debuggable true
            testCoverageEnabled true
        }
        debugUnsigned {
            debuggable true
            testCoverageEnabled true
        }
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    lintOptions {
        abortOnError false
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    // Firebase Messaging
    implementation 'com.google.firebase:firebase-core:16.0.4'
    implementation 'com.google.firebase:firebase-messaging:17.3.3'


    // Android support libraries
    implementation "com.android.support:appcompat-v7:$support_package_version"
    implementation "com.android.support:cardview-v7:$support_package_version"
    implementation "com.android.support:appcompat-v7:$support_package_version"
    implementation "com.android.support:design:$support_package_version"

    implementation 'com.apollographql.apollo:apollo-runtime:1.0.0-alpha2'

    implementation 'com.android.support.constraint:constraint-layout:1.1.3'

    // Android architecture components
    implementation "android.arch.lifecycle:extensions:$arch_version"
    implementation "android.arch.lifecycle:viewmodel:$arch_version"
    testImplementation "android.arch.core:core-testing:$arch_version"

    // Database
    implementation "android.arch.persistence.room:rxjava2:1.1.1"
    implementation "android.arch.persistence.room:runtime:1.1.1"
    kapt "android.arch.persistence.room:compiler:1.1.1"
    testImplementation "android.arch.core:core-testing:$arch_version"
    // Network
    implementation 'com.squareup.retrofit2:retrofit:2.4.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.3.0'
    implementation 'com.google.code.gson:gson:2.8.2'
    // Networking
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofit_version"
    implementation "com.squareup.okhttp3:okhttp:$okhttp_version"
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttp_version"


    // Rx
    implementation "io.reactivex.rxjava2:rxjava:$rxjava_version"
    implementation 'io.reactivex.rxjava2:rxandroid:2.0.2'
    implementation 'io.reactivex.rxjava2:rxkotlin:2.2.0'
    implementation 'com.jakewharton.rxbinding2:rxbinding:2.1.1'


    // Koin for Android
    implementation "org.koin:koin-android:$koin_version"
    // Koin Android Scope feature
    implementation "org.koin:koin-android-scope:$koin_version"
    // Koin Android ViewModel feature
    implementation "org.koin:koin-android-viewmodel:$koin_version"
    testImplementation 'org.koin:koin-test:1.0.0-RC-1'

    // Glide
    implementation 'com.squareup.picasso:picasso:2.5.2'
    implementation 'com.jakewharton.picasso:picasso2-okhttp3-downloader:1.1.0'


    // Testing frameworks
    testImplementation 'junit:junit:4.12'
    
    testImplementation 'org.mockito:mockito-inline:2.21.0'

    testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:2.0.0-RC1"
//    testImplementation 'com.android.support.test:runner:1.0.2'

    testImplementation "com.google.truth:truth:0.42"
//    androidTestImplementation 'com.android.support.test:runner:1.0.2'
//    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    testImplementation 'com.android.support.test:runner:1.0.2'
    testImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    testImplementation 'com.android.support.test:rules:1.0.2'



    androidTestImplementation 'com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    }
}

// Must be in the end of file
apply plugin: 'com.google.gms.google-services'